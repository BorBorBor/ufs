TODO ÂµFS v1
===========

MUST HAVE
---------

Model:
- Group
  * Rename AccountGroup to Group
  * Methods for registered_transaction_set, payed_transaction_set,
    received_transaction_set in the Group model
- Transaction: Add concept of received payment
- TransactionLog(transaction, type, timestamp, user, message) instead of
  transaction details and to know who did what to a transaction. Type is
  registered, payed, recieved and rejected.
- Unit tests of model layer, especially transaction and account balance

Views:
- Use decorators to control commit/rollback of transactions

Forms:
- More sanity cheking, prevent admin from performing transactions that he does
  not have enough privelegdes to invoke (should be done in form and/or model)

Templates:
- Updated transaction lists and detail views, differentiated for admins and
  users

New features:
- Settlement
  * Invoice
- Admin rejection of user claims, using TransactionMessage

SHOULD HAVE
-----------

- Admin should be able to edit lists (adamcik)

MAY HAVE
--------

- User registration of expenses
- Lists:
  * Who to include on the list?
  * Rename "list item" to "list column" or "list field"?

DONE
----

- JS code for toggeling checkbox'es in approve view
- Dynamic lists
- Admin mesage with feedback to approval
- enforce sum(width) < 100, implimented by relative 100%
- Move group info to account summary
- Refactor menu
- Income statement (see http://www.accountingcoach.com/)
- i18n: Add _() et al around all strings
- Add contact field to account group for first-line support
- Custom image for list
- List: IntegerField->PositiveSmallInt
- Enforce checking of admin rights, all we do today is hide menu...
- i18n: Translate itkufs/locale/no/LC_MESSAGES/django.po
- Split transation_list template into user/admin/menu

WONTFIX
-------

- Custom base.html for each accountgroups lists?
- Account list in admin menu
- Serial number to lists (somewhat in doubt...)
